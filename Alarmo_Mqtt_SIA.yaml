blueprint:
  name: "Envoi MQTT avec capteurs Alarmo (corrected)"
  description: "Publie un message MQTT avec une trame SIA basée sur les capteurs configurés dans Alarmo"
  domain: automation
  input:
    alarmo_sensor:
      name: "Sélectionner un capteur d'Alarmo"
      description: "Choisir un capteur configuré dans Alarmo"
      selector:
        entity:
          domain: binary_sensor
          device_class: presence
    sia_number:
      name: "Numéro SIA pour le capteur"
      description: "Le numéro du capteur pour le code SIA"
      selector:
        number:
          min: 1
          max: 999
          step: 1
    mqtt_topic:
      name: "Sujet MQTT"
      description: "Sujet sur lequel publier le message MQTT"
      default: "alarme/alarme"
      selector:
        text
    payload_message:
      name: "Message pour la trame SIA"
      description: "Message spécifique pour le capteur"
      selector:
        text
    qos:
      name: "Qualité de Service (QoS)"
      description: "Niveau QoS du message MQTT"
      selector:
        number:
          min: 0
          max: 2
          step: 1
    retain:
      name: "Conserver le message MQTT"
      description: "Indicateur de conservation du message"
      selector:
        boolean

trigger:
  platform: state
  entity_id: !input alarmo_sensor
  to: "on"

action:
  - service: mqtt.publish
    data:
      topic: !input mqtt_topic
      payload: >
        {
          "sia_code": "BA{{ '{:03d}'.format(!input sia_number) }}",
          "capteur": "{{ states[!input.alarmo_sensor].name }}",
          "message": "{{ !input.payload_message }}"
        }
      qos: !input qos
      retain: !input retain

mode: single
