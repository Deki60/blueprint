blueprint:
  name: Notification Frigate via MQTT
  description: |
    ## Notification de l'application Frigate via MQTT

    Ce blueprint enverra une notification via MQTT lorsqu'un événement Frigate pour la caméra sélectionnée est déclenché. La notification inclura un lien vers le clip vidéo ainsi que des images de détection.

  domain: automation
  input:
    camera:
      name: Caméra Frigate
      description: La caméra à surveiller, selon celles définies dans Frigate.
      selector:
        entity:
          integration: frigate
          domain: camera
          device_class: camera
          multiple: true
        select:
    mqtt_topic:
      name: Topic MQTT
      description: Le topic sur lequel envoyer la notification.
      default: "alarme/events"
    base_url:
      name: (Optionnel) URL de base
      description: >
        L'URL externe de votre instance Home Assistant. Cela s'ouvrira dans l'application plutôt que dans le navigateur.
      default: ""
    send_image:
      name: Envoyer l'image de détection
      description: Envoyer l'image de détection dans la notification
      default: true
      selector:
        boolean: {}
    send_clip:
      name: Envoyer le clip vidéo
      description: Envoyer un lien vers le clip vidéo dans la notification
      default: true
      selector:
        boolean: {}

mode: parallel
trigger:
  - platform: mqtt
    topic: frigate/events

condition:
  - condition: template
    value_template: "{{ trigger.payload_json['after']['camera'] == camera }}"

action:
  - alias: "Notification d'événement Frigate"
    sequence:
      - variables:
          id: "{{ trigger.payload_json['after']['id'] }}"
          object: "{{ trigger.payload_json['after']['label'] }}"
          label: "{{ object | title }}"
          camera_name: "{{ trigger.payload_json['after']['camera'] }}"
          image_url: "{{ base_url }}/api/frigate/notifications/{{ id }}/{{ camera_name }}/snapshot.jpg"
          clip_url: "{{ base_url }}/api/frigate/notifications/{{ id }}/{{ camera_name }}/clip.mp4"
      - choose:
          - conditions:
              - "{{ send_image }}"
            sequence:
              - service: mqtt.publish
                data:
                  topic: !input mqtt_topic
                  payload: >
                    Un {{ label }} a été détecté sur la caméra {{ camera_name }}.
                    Image de détection: {{ image_url }}
      - choose:
          - conditions:
              - "{{ send_clip }}"
            sequence:
              - service: mqtt.publish
                data:
                  topic: !input mqtt_topic
                  payload: >
                    Un {{ label }} a été détecté sur la caméra {{ camera_name }}.
                    Voir le clip: {{ clip_url }}
